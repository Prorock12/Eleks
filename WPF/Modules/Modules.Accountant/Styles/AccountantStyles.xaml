<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:xcdg="http://schemas.xceed.com/wpf/xaml/datagrid"
                    xmlns:converters="clr-namespace:CommonUI.Converters;assembly=CommonUI"
                    xmlns:infrastructure="clr-namespace:Infrastructure;assembly=Infrastructure"
                    xmlns:models="clr-namespace:Models.Models;assembly=Models"
                    xmlns:localization="clr-namespace:Modules.Accountant.Properties"
                    mc:Ignorable="d">

    <converters:ValueOfWidthHeightConverter x:Key="ValueOfWidthHeightConverter" />

    <Style TargetType="{x:Type xcdg:DataGridControl}">
        <Setter Property="AutoCreateColumns" Value="False" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Local"/>
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu>
                    <MenuItem Header="{x:Static localization:Resources.AddRow}" Command="{Binding AddRowCommand}" />
                    <MenuItem Header="{x:Static localization:Resources.DeleteRow}" Command="{Binding RemoveRowCommand}" />
                </ContextMenu>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DatamartDataGridTableViewStyle"
           TargetType="{x:Type xcdg:TableView}">
        <Setter Property="ShowFixedColumnSplitter"
                Value="False" />
        <!--<Setter Property="UseDefaultHeadersFooters"
                Value="False" />-->
        <Setter Property="ShowRowSelectorPane"
                Value="False" />
        <Setter Property="IsAlternatingRowStyleEnabled"
                Value="True" />
        <Setter Property="ColumnStretchMode"
                Value="Last" />
        <Setter Property="AllowDrop"
                Value="False" />
        <Setter Property="AllowColumnChooser"
                Value="False" />
        <Setter Property="RemovingGroupCursor"
                Value="{x:Null}" />
        <Setter Property="KeyboardNavigation.TabNavigation"
                Value="Continue" />
    </Style>

    <DataTemplate x:Key="XDataTemplate" DataType="{x:Type models:VisualElement}">
        <xcdg:NumericTextBox Value="{xcdg:CellEditorBinding}" />
    </DataTemplate>

    <DataTemplate x:Key="YDataTemplate">
        <xcdg:NumericTextBox Value="{xcdg:CellEditorBinding}" />
    </DataTemplate>

    <DataTemplate x:Key="WidthDataTemplate">
        <xcdg:NumericTextBox Value="{xcdg:CellEditorBinding}" />
    </DataTemplate>

    <DataTemplate x:Key="HeightDataTemplate">
        <xcdg:NumericTextBox Value="{xcdg:CellEditorBinding}" />
    </DataTemplate>

    <DataTemplate x:Key="AngleDataTemplate">
        <xcdg:NumericTextBox Value="{xcdg:CellEditorBinding}" />
    </DataTemplate>

    <DataTemplate x:Key="ContentValueWidthDataTemplate">
        <TextBlock Text="{Binding DataContext.Width, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type xcdg:DataCell}} ,Converter={StaticResource ValueOfWidthHeightConverter}}"/>
    </DataTemplate>

    <DataTemplate x:Key="ContentValueHeightDataTemplate">
        <TextBlock Text="{Binding DataContext.Height, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type xcdg:DataCell}} ,Converter={StaticResource ValueOfWidthHeightConverter}}"/>
    </DataTemplate>

    <DataTemplate x:Key="BorderTemplate" DataType="{x:Type infrastructure:ExtendedColor}">
        <TextBlock Text="{Binding Name}" Style="{DynamicResource MaterialdesignTextBlock}"/>
    </DataTemplate>

    <DataTemplate x:Key="ColorsComboBoxDataTemplate">
        <ComboBox DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type xcdg:DataCell}}}"
            ItemTemplate="{StaticResource BorderTemplate}"
            ItemsSource="{Binding Source={x:Static infrastructure:ExtendedColorHelper.Colors}}"
            SelectedValuePath="Color"
            SelectedValue="{xcdg:CellEditorBinding}"
            Style="{DynamicResource MaterialDesignComboBox}"/>
    </DataTemplate>
</ResourceDictionary>